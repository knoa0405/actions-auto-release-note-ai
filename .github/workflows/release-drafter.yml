name: Release Drafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - production
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]
  # pull_request_target event is required for autolabeler to support PRs from forks
  # pull_request_target:
  #   types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a GitHub release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # ëª¨ë“  íƒœê·¸ë¥¼ ê°€ì ¸ì˜¤ê¸° ìœ„í•´

      - name: Get latest release tag
        id: version
        run: |
          # Get the latest git tag
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-version:refname | head -1 || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          if [ "$LATEST_TAG" != "v0.0.0" ]; then
            echo "Using existing tag: $LATEST_TAG"
            echo "tag=${LATEST_TAG}" >> $GITHUB_OUTPUT
            echo "version=${LATEST_TAG}" >> $GITHUB_OUTPUT
          else
            echo "No tags found, creating initial version"
            echo "tag=v0.0.1" >> $GITHUB_OUTPUT
            echo "version=v0.0.1" >> $GITHUB_OUTPUT
          fi

      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      #- name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        with:
          tag: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.tag }} ðŸŒˆ
          version: ${{ steps.version.outputs.tag }}
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
